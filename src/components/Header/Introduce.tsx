const Introduce = () => {
  return (
    <div className="mb-2">
      <p className="text-2xl text-blue-500 sectionTitle">Introduce</p>
      <p>
        협업을 통해 배웁니다. 지도에 마커를 표기하는 과정에서 마커가 정상동작
        하지 않아, 페어 프로그래밍을 통해 문제점을 해결했습니다. 지도에 마커를
        표기하고 click 이벤트를 부착하려 했으나 마커를 DOM에 부착하는 코드와
        마커에 이벤트를 부착하는 코드의 순서가 보장되지 않아 정상적으로 동작하지
        않았습니다. 동료와 비동기처리, 재랜더링에 대한 의견을 나눠가며 마커들을
        담은 배열을 State로 관리하고 결합도가 높은 useEffect의 deps들을 정리한
        후 새로운 useEffect문을 활용하여 문제를 해결했습니다. 그리고 useEffect와
        State들을 Hook으로 리팩터링하여 기존 컴포넌트 코드양을 30% 줄였습니다.
        이후 코드리뷰를 지속하였고 동료의 생각과 클린코드의 중요성에 대해서
        느낄수 있었습니다.
        <br />
        <br />
        사용자가 되어 생각해봅니다. 전체 화면에 로딩 스피너를 보여주던 것을
        Suspense를 통하여 로딩이 진행중인 영역에만 Skeleton UI를 적용하였습니다.
        기존에는 스피너를 제외한 어떠한 UI도 보이지 않아 서비스가 멈춘 것인지
        로딩이 진행중인지 다소 모호하였습니다. 개선을 통하여 모든 데이터를
        기다리지않고 로딩이 완료된 영역은 먼저 사용자에게 보여줌으로써
        로딩시간이 조금은 줄어든 느낌을 줄 수 있었고 어느 정보를 불러오고 있는지
        직관적으로 확인할 수 있게 되었습니다. 그리고 모바일 환경에서도 버튼
        클릭만으로 모든 메뉴를 편리하게 사용할 수 있도록 네비게이션바를
        구현하였습니다.
        <br />
        <br />
        인과관계가 명확한 것을 좋아합니다. 공식 문서를 기반으로 ChatGPT와
        레퍼런스, 그리고 스터디를 통한 교차 검사를 통하여 구현을 이해합니다.
        모르는 것은 `내가 하고 싶은 것, 내가 시도해본 것, 내가 막힌 것` 으로
        질문을 구성하여 효과적으로 이해합니다. 알게 된 내용을 공유하는 것을
        좋아하여 10개의 스터디에 참여했었습니다. 최근에는 Next.js 13ver에 대하여
        학습하고 있습니다.
      </p>
    </div>
  );
};
export default Introduce;
