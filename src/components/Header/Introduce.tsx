const Introduce = () => {
  return (
    <div className="pb-2">
      <p>
        협업을 좋아합니다. 페어 프로그래밍을 통해서 무분별한 useEffect의
        사용으로 지도에 마커가 제대로 렌더링 되지 않던 문제를 해결했고 일부
        코드를 Hook으로 리팩터링하여 기존 컴포넌트 코드양을 30% 줄였습니다. 이후
        2개 이상의 페이지에서 사용되는 컴포넌트들은 재사용할 수 있는 형태로
        리팩터링하였습니다. 반복하여 사용되는 값들 또한 상수로 선언하여 한
        곳에서만 내용을 수정하여도 모두 반영될 수 있도록 하였습니다.
        <br />
        <br />
        새로운 것에 대한 두려움이 없습니다. 프로젝트마다 새로운 기술 스택을 1개
        이상 사용해보았습니다. Fetch API 이후 Axios를 사용하면서 Axios
        인스턴스를 생성하여 중복된 코드 사용을 방지했습니다. 이후 React Query를
        사용하면서 isLoading, Suspense 등을 통하여 FallbackUI, Skeleton을
        제공하여 UX를 향상하고 CLS를 0점으로 개선하였습니다. 모르는 것은 `내가
        하고 싶은 것, 내가 시도해본 것, 내가 막힌 것` 으로 질문을 구성하여
        효과적으로 이해합니다. 최근에는 Next.js 13ver에 대하여 학습하고
        있습니다.
        <br />
        <br />
        코드 리뷰로 동료들의 생각을 알 수 있었습니다. 81개의 코멘트를 주고받으며
        PR을 수정해보았습니다. PR의 단위가 너무 커서 기존 PR을 닫고 3개의 PR로
        나누었습니다. 작업물을 이해해야 하는 동료의 입장과 이해하기 쉬운 코드를
        작성하는 것이 중요하다는 걸 알 수 있었습니다. 이후 작은 작업 단위로 PR을
        진행하여 평균 12개 코멘트를 주고받으며 리뷰를 마칠 수 있었습니다.
        <br />
        <br />
        인과관계가 명확한 것을 좋아합니다. 그리고 알게 된 내용을 공유하는 것을
        좋아하여 10개의 스터디에 참여했었습니다. 공식 문서를 기반으로 ChatGPT와
        레퍼런스, 그리고 스터디를 통한 교차 검사를 통하여 구현을 이해합니다.
        의견 공유 중 React.dev의 부정확한 내용을 발견했고 스터디원 중 한 분이
        수정 PR을 요청하여 공식 문서의 기여자가 되었습니다.
      </p>
    </div>
  );
};
export default Introduce;
