import { ProjectInfo } from '@/types';

export const projects: ProjectInfo[] = [
  {
    projectTitle: '랭킹 먼지',
    description: '전국의 미세먼지 정보확인 서비스',
    projectDate: '2023.03 ~ 2023.05',
    projectParticipants: '2명',
    deployLink: 'https://dust-rating.vercel.app/',
    githubLink: 'https://github.com/tooooo1/dust-rating',
    stackList: [
      'React',
      'TypeScript',
      'Vite',
      'Chakra UI',
      'Framer Motion',
      'React Query',
      'Axios',
      'Vercel',
    ],
    feature: [
      'Kakao MAP API 사용을 위한 useMap Hook(줌 인/아웃, 내위치 이동, custom overlay) 구현',
      'Error Boundary와 Suspense를 묶은 Async Boundary를 적용하여 선언적 에러 처리와 로딩UI 처리',
      '반응형 페이지로 제작하여 다양한 환경에 대응',
      'UI 일관성 유지를 위하여 Skeleton UI 적용',
      '모바일 환경에서의 편의성을 고려하여 네비게이션바 구현',
      'Geolocation API를 사용하여 내위치 기반 정보 제공 ',
    ],
  },
  {
    projectTitle: 'ODEEGO',
    description: '약속 장소를 공평하게 정하기위한 서비스',
    projectDate: '2023.02~2023.03',
    projectParticipants: 'FE4명 + BE3명',
    deployLink: 'https://odeego.vercel.app/',
    githubLink: 'https://github.com/prgrms-web-devcourse/Team-PODO-ODEEGO-FE',
    stackList: [
      'React',
      'TypeScript',
      'Next.js',
      'React Query',
      'Axios',
      'Vercel',
    ],
    feature: [
      'BE와 협의를 통해 customError코드를 사용하여 400으로만 내려오던 에러코드를 세분화하여 상황에 맞는 에러 핸들링 수행, FE 개발 편의성 향상',
      'Vercel Serverless Functions를 사용하여 외부에 환경변수 노출 방지',
      'ESLint, Prettier, husky를 적용하고 github-wiki에 컨벤션을 작성하여 통일',
      '1주 단위의 스프린트를 통해 스크럼과 회고를 진행',
      '리뷰 파트너를 정하여 코드 리뷰를 진행',
    ],
  },
  {
    projectTitle: 'UnsungHero',
    description: '아버지들을 대상으로한 커뮤니티',
    projectDate: '2023.01-2023.01',
    projectParticipants: '4명',
    deployLink: 'https://unsunghero.netlify.app/',
    githubLink: 'https://github.com/jaekwanAHN/FEDC3_UnsungHero_Donggeun',
    stackList: [
      'React',
      'TypeScript',
      'styled-components',
      'React Query',
      'Axios',
      'Vercel',
    ],
    feature: [
      '게시글 CRUD 구현',
      '이미지 업로드 시 크기, 확장자를 제한하여 사용자가 API 에러를 경험하지 않도록 방지',
      '게시글 작성, 수정 시 업로드할 이미지를 미리 볼 수 있도록 구현',
      '비밀 댓글 옵션으로 작성자와 글쓴이만 해당 댓글을 확인할 수 있도록 구현',
    ],
  },
  {
    projectTitle: 'Notion',
    description: 'Vanilla-JS로 구현한 Notion',
    projectDate: '2023.01',
    projectParticipants: '개인',
    deployLink: '',
    githubLink:
      'https://github.com/jaekwanAHN/FEDC3-4_Project_Notion_VanillaJS/tree/3/%234_ahnjaekwan_working',
    stackList: ['Vanilla-JS'],
    feature: [
      '바닐라 자바스크립트로 SPA를 구현',
      '글을 작성하던 중 새로고침이 일어나더라도 작성중인 글의 내용이 사라지지 않도록 LocalStorage를 사용하여 글의 제목과 내용 보존',
      'History API를 통하여 새로고침 없이 페이지 이동 구현',
      '사용자가 텍스트를 입력시 매번 API Call이 일어나는 현상을 방지하고자 setTimeout을 활용한 Debounce 적용',
    ],
  },
];
